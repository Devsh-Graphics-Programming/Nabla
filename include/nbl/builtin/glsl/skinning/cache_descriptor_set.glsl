#ifndef _NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET_GLSL_INCLUDED_
#define _NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET_GLSL_INCLUDED_


#define NBL_GLSL_TRANSFORM_TREE_POOL_NODE_PARENT_DESCRIPTOR_DECLARED
#define NBL_GLSL_TRANSFORM_TREE_POOL_NODE_RELATIVE_TRANSFORM_DESCRIPTOR_DECLARED
#define NBL_GLSL_TRANSFORM_TREE_POOL_NODE_MODIFIED_TIMESTAMP_DESCRIPTOR_DECLARED
#define NBL_GLSL_TRANSFORM_TREE_POOL_NODE_NORMAL_MATRIX_DESCRIPTOR_DECLARED
#include <nbl/builtin/glsl/transform_tree/pool_descriptor_set.glsl>


#ifndef NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET
#define NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET NBL_GLSL_TRANSFORM_TREE_POOL_DESCRIPTOR_SET
#endif


#ifndef NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_BINDING
#define NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_BINDING 0
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_QUALIFIERS
#define NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_QUALIFIERS readonly restrict
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_DECLARED
#define NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_DECLARED
layout(
    set=NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET,
    binding=NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_BINDING
) NBL_GLSL_SKINNING_CACHE_BONE_NODE_DESCRIPTOR_QUALIFIERS buffer JointNodes
{
    uint data[];
} jointNodes;
#endif

#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_BINDING
#define NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_BINDING 1
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_QUALIFIERS
#define NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_QUALIFIERS writeonly restrict
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_DECLARED
#define NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_DECLARED
layout(row_major,
    set=NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET,
    binding=NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_BINDING
) NBL_GLSL_SKINNING_CACHE_SKINNING_TRANSFORM_DESCRIPTOR_QUALIFIERS buffer SkinningTransforms
{
    mat4x3 data[];
} skinningTransforms;
#endif

#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_BINDING
#define NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_BINDING 2
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_QUALIFIERS
#define NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_QUALIFIERS restrict
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_DECLARED
#define NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_DECLARED
layout(
    set=NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET,
    binding=NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_BINDING
) NBL_GLSL_SKINNING_CACHE_SKINNING_RECOMPUTED_TIMESTAMP_DESCRIPTOR_QUALIFIERS buffer SkinningRecomputedTimestamps
{
    uint data[];
} skinningRecomputedTimestamps;
#endif

#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_BINDING
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_BINDING 5
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_QUALIFIERS
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_QUALIFIERS readonly restrict
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_DECLARED
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_DECLARED
layout(
    set=NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET,
    binding=NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_BINDING
) NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_OFFSET_DESCRIPTOR_QUALIFIERS buffer InverseBindPoseOffsets
{
    uint data[];
} inverseBindPoseOffsets;
#endif


#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_BINDING
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_BINDING 6
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_QUALIFIERS
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_QUALIFIERS readonly restrict
#endif
#ifndef NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_DECLARED
#define NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_DECLARED
layout(row_major,
    set = NBL_GLSL_SKINNING_CACHE_DESCRIPTOR_SET,
    binding = NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_BINDING
) NBL_GLSL_SKINNING_CACHE_INVERSE_BIND_POSE_DESCRIPTOR_QUALIFIERS buffer InverseBindPoses
{
    mat4x3 data[];
} inverseBindPoses;
#endif


#endif