#version 450
#define G 9.8
#define cvec3 mat3x2
#include <nbl/builtin/glsl/math/complex.glsl>

layout (local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, std430) buffer H0_DATA
{
	cvec3 data[];
} primary_calculations;

layout(set = 0, binding = 1, std430) buffer ANIMATED_SPECTRUM
{
	vec2 data[];
} animated_spectrum;

layout(push_constant) uniform PUSH_CONSTANTS
{
	uvec2 IMG_SIZE;
	float TIME;
} u_pc;

#define EI(x) vec2(cos(x), sin(x))
void main()
{
    uint ssbo_index = gl_GlobalInvocationID.y * u_pc.IMG_SIZE.x + gl_GlobalInvocationID.x;
	vec2 h0k = primary_calculations.data[ssbo_index][0];
	vec2 h0_conj = primary_calculations.data[ssbo_index][1];
	vec2 k = primary_calculations.data[ssbo_index][2];

	float wk = sqrt(length(k) * G); 
	float wkt = wk * u_pc.TIME;

	vec2 res = nbl_glsl_complex_mul(h0k, EI(wkt)) + 
			   nbl_glsl_complex_mul(h0_conj, EI(-wkt));

	animated_spectrum.data[ssbo_index] = res;
}