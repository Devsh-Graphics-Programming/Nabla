// Copyright (C) 2018-2020 - DevSH Graphics Programming Sp. z O.O.
// This file is part of the "Nabla Engine".
// For conditions of distribution and use, see copyright notice in nabla.h

#version 430 core

layout (constant_id = 1) const int PARTICLE_COUNT = 256;
layout (constant_id = 2) const int POS_BUF_IX = 0;
layout (constant_id = 3) const int VEL_BUF_IX = 1;
layout (constant_id = 4) const int BUF_COUNT = 2;

layout (local_size_x_id = 0) in;

layout (set = 0, binding = 0, std430) restrict buffer PARTICLE_DATA
{
	vec3 p[PARTICLE_COUNT];
} data[BUF_COUNT];
layout (set = 0, binding = 1, std140) uniform UBO
{
	vec3 gravP;
	float dt;
} ubo;

void main()
{
	uint GID = gl_GlobalInvocationID.x;
	
	vec3 p = data[POS_BUF_IX].p[GID];
	vec3 v = data[VEL_BUF_IX].p[GID];
	
	v *= 1.0 - 0.99*ubo.dt;
	float d = distance(ubo.gravP,p);
	float a = 10000.0 / max(1.0, 0.01*pow(d,1.5));
	v += (ubo.gravP-p)/d * a * ubo.dt;
	p += v*ubo.dt;
	
	data[POS_BUF_IX].p[GID] = p;
	data[VEL_BUF_IX].p[GID] = v;
}