#define _NBL_GLSL_EXT_BLUR_INPUT_SET_DEFINED_ 0
#define _NBL_GLSL_EXT_BLUR_INPUT_BINDING_DEFINED_ 0

layout (set = _NBL_GLSL_EXT_BLUR_INPUT_SET_DEFINED_, binding = _NBL_GLSL_EXT_BLUR_INPUT_BINDING_DEFINED_) uniform sampler2D in_image;
#define _NBL_GLSL_EXT_BLUR_INPUT_DESCRIPTOR_DEFINED_

vec4 nbl_glsl_ext_Blur_getPaddedData(in uint idx)
{
	const ivec2 image_dims = textureSize(in_image, 0);

	uint strided_idx = (idx * _NBL_GLSL_WORKGROUP_SIZE_) + gl_LocalInvocationIndex; // x coordinate

	vec4 data = vec4(0.f);
	if (strided_idx < image_dims.x && gl_WorkGroupID.x < image_dims.y)
	{
		vec2 tex_coords = vec2(float(strided_idx)/float(image_dims.x), float(gl_WorkGroupID.x)/float(image_dims.y));
		data = texture(in_image, tex_coords);
	}

	return data;
}
#define _NBL_GLSL_EXT_BLUR_GET_PADDED_DATA_DEFINED_

#include "nbl/builtin/glsl/ext/CentralLimitBoxBlur/default_compute_blur.comp"