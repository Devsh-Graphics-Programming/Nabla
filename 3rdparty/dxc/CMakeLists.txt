set(HLSL_OPTIONAL_PROJS_IN_DEFAULT OFF)
set(HLSL_ENABLE_ANALYZE OFF)
set(HLSL_OFFICIAL_BUILD OFF)
set(HLSL_ENABLE_FIXED_VER OFF)
set(HLSL_FIXED_VERSION_LOCATION "")
set(HLSL_BUILD_DXILCONV ON)
set(CLANG_VENDOR "")
set(ENABLE_SPIRV_CODEGEN ON)
set(SPIRV_BUILD_TESTS OFF)
set(CLANG_ENABLE_ARCMT OFF)
set(CLANG_ENABLE_STATIC_ANALYZER OFF)
set(CLANG_INCLUDE_TESTS Off)
set(LLVM_INCLUDE_TESTS Off)
set(HLSL_INCLUDE_TESTS OFF)
set(LLVM_TARGETS_TO_BUILD None)
set(LLVM_INCLUDE_DOCS OFF)
set(LLVM_INCLUDE_TESTS OFF)
set(LLVM_INCLUDE_EXAMPLES OFF)
set(LIBCLANG_BUILD_STATIC ON)
set(LLVM_OPTIMIZED_TABLEGEN OFF)
set(LLVM_REQUIRES_EH ON)
set(LLVM_APPEND_VC_REV ON)
set(LLVM_ENABLE_RTTI ON)
set(LLVM_ENABLE_EH ON)
set(LLVM_DEFAULT_TARGET_TRIPLE dxil-ms-dx)
set(CLANG_BUILD_EXAMPLES OFF)
set(LLVM_REQUIRES_RTTI ON)
set(CLANG_CL OFF)
set(LLVM_ENABLE_WERROR OFF)
set(SPIRV_WERROR OFF)
set(DXC_BUILD_ARCH x64)
set(SPIRV_HEADERS_SKIP_INSTALL ON)
set(SPIRV_HEADERS_SKIP_EXAMPLES ON)
set(SKIP_SPIRV_TOOLS_INSTALL ON)
set(SPIRV_SKIP_TESTS ON)
set(SPIRV_SKIP_EXECUTABLES ON)
set(HLSL_ENABLE_DEBUG_ITERATORS ON)

get_filename_component(DXC_SPIRV_TOOLS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/dxc/external/SPIRV-Tools" ABSOLUTE)
get_filename_component(DXC_SPIRV_HEADERS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/dxc/external/SPIRV-Headers" ABSOLUTE)

set(DXC_SPIRV_TOOLS_DIR "${DXC_SPIRV_TOOLS_DIR}")
set(DXC_SPIRV_HEADERS_DIR "${DXC_SPIRV_HEADERS_DIR}")
set(SPIRV-Headers_SOURCE_DIR "${DXC_SPIRV_HEADERS_DIR}")

if(WIN32)
    if(NOT DEFINED HLSL_AUTOCRLF)
        set(HLSL_AUTOCRLF ON)
    endif()
endif()

if(NBL_DYNAMIC_MSVC_RUNTIME)
	set(CMAKE_MSVC_RUNTIME_LIBRARY MultiThreaded$<$<CONFIG:Debug>:Debug>DLL)
else()
	set(CMAKE_MSVC_RUNTIME_LIBRARY MultiThreaded$<$<CONFIG:Debug>:Debug>)	
endif()

# use with their default params
include("${CMAKE_CURRENT_SOURCE_DIR}/dxc/cmake/caches/PredefinedParams.cmake")
add_subdirectory(dxc EXCLUDE_FROM_ALL)
set_target_properties(SPIRV-Tools-opt PROPERTIES CXX_STANDARD 17)

get_filename_component(_SPIRV_BR_BUNDLE_SEARCH_DIRECTORY_ "${DXC_SPIRV_HEADERS_DIR}/include" ABSOLUTE)
get_filename_component(_SPIRV_BR_OUTPUT_DIRECTORY_SOURCE_ "${CMAKE_CURRENT_BINARY_DIR}/src" ABSOLUTE)
get_filename_component(_SPIRV_BR_OUTPUT_DIRECTORY_HEADER_ "${CMAKE_CURRENT_BINARY_DIR}/include" ABSOLUTE)
set(SPIRV_BUILTIN_RESOURCES_DIRECTORY_PATH "${_SPIRV_BR_BUNDLE_SEARCH_DIRECTORY_}/spirv" CACHE INTERNAL "" FORCE)

if(NBL_EMBED_BUILTIN_RESOURCES)
	include("${NBL_ROOT_PATH}/src/nbl/builtin/utils.cmake")

    # SPIRV Header in builtin resources, nbl paths as aliases
    LIST_BUILTIN_RESOURCE(SPIRV_RESOURCES_TO_EMBED "unified1/spirv.h")
    LIST_BUILTIN_RESOURCE(SPIRV_RESOURCES_TO_EMBED "unified1/spirv.hpp")
    LIST_BUILTIN_RESOURCE(SPIRV_RESOURCES_TO_EMBED "unified1/GLSL.std.450.h")

    ADD_CUSTOM_BUILTIN_RESOURCES(spirvBuiltinResourceData SPIRV_RESOURCES_TO_EMBED "${_SPIRV_BR_BUNDLE_SEARCH_DIRECTORY_}" "spirv" "spirv::builtin" "${_SPIRV_BR_OUTPUT_DIRECTORY_HEADER_}" "${_SPIRV_BR_OUTPUT_DIRECTORY_SOURCE_}" "STATIC" "INTERNAL")
endif()