stage('CMake')
{
	bat returnStatus: true, script: "cmake -DNBL_COMPILE_WITH_CUDA:BOOL=ON -DNBL_BUILD_OPTIX:BOOL=ON -DNBL_BUILD_MITSUBA_LOADER:BOOL=ON -DNBL_BUILD_RADEON_RAYS:BOOL=ON -DNBL_RUN_TESTS:BOOL=ON -S ./ -B ./build -T v142"
	bat "git -C ./3rdparty/gli reset --hard" // due to gli build system bug
	bat "cmake -DNBL_COMPILE_WITH_CUDA:BOOL=ON -DNBL_BUILD_OPTIX:BOOL=ON -DNBL_BUILD_MITSUBA_LOADER:BOOL=ON -DNBL_BUILD_RADEON_RAYS:BOOL=ON -DNBL_RUN_TESTS:BOOL=ON -S ./ -B ./build -T v142"
}

stage('Compile Nabla')
{
	bat "cmake --build ./build --target Nabla --config Release -j12 -v"
}

stage('Compile programs')
{
	bat "cmake --build ./build --target examples_tests/22.RaytracedAO/raytracedao --config Release -j12 -v"
	bat "cmake --build ./build --target examples_tests/39.DenoiserTonemapper/denoisertonemapper --config Release -j12 -v"
}

stage('Run all tests')
{
	def currentABSDirectory = pwd()
	
	def exe = "${currentABSDirectory}/examples_tests/22.raytracedao/bin/raytracedao.exe"
	def publicInputFilePath = "${currentABSDirectory}/examples_tests/media/mitsuba/public_test_scenes.txt"
	def privateInputFilePath = "${currentABSDirectory}/examples_tests/media/Ditt-Reference-Scenes/private_test_scenes.txt"
	def nablaRepoDir = currentABSDirectory
	def imageMagicExePath = "C:/Program Files/ImageMagick-7.1.1-Q16-HDRI/magick.exe"
	def publicReferencesRepoDir = "${nablaRepoDir}/ci/22.RaytracedAO/references/public"
	def privateReferencesRepoDir = "${nablaRepoDir}/ci/22.RaytracedAO/references/private"
	
 	status = bat returnStatus: true, script: "python3 -u ./tests/22.RaytracedAO/test.py ${exe} ${publicInputFilePath} ${privateInputFilePath} ${nablaRepoDir} \"${imageMagicExePath}\" ${publicReferencesRepoDir} ${privateReferencesRepoDir}"
	
	if("${status}" != "0")
	{
		if("${status}" == "-2")
		{
			unstable "Some of RaytracedAO test's scenes have not passed the check!"
		}
		else
		{
			error "RaytracedAO test has failed!"
		}
	}
}

stage('Pack artifacts')
{
	bat "cmake --build ./build --target pack_artifact_ditt --config Release -j12 -v"
}
